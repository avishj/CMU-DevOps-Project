services:

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./data/prometheus/config:/etc/prometheus 
      - ./data/prometheus/data:/prometheus      
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'             
      - '--web.enable-lifecycle'
    networks:
      - devops-spring

  sonarqube:
    image: sonarqube:9.9-community
    container_name: sonarqube
    restart: always
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONAR_SECURITY_ADMIN_LOGIN=admin
      - SONAR_SECURITY_ADMIN_PASSWORD=password
      - SONAR_WEB_SYSTEMPASSCODE=password
      - SONAR_LOG_LEVEL=DEBUG
      - SONAR_WEB_SSO_ENABLE=true
    ports:
      - "9002:9000"
    volumes:
      - ./data/sonarqube/data:/opt/sonarqube/data
      - ./data/sonarqube/logs:/opt/sonarqube/logs
      - ./data/sonarqube/extensions:/opt/sonarqube/extensions
    networks:
      - devops-spring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3001:3000"
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./data/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_SECURITY_DISABLE_INITIAL_ADMIN_PASSWORD_CHANGE=true
      - GF_METRICS_ENABLED=true
      - GF_METRICS_BASIC_AUTH_USERNAME=prometheus
      - GF_METRICS_BASIC_AUTH_PASSWORD=password
    networks:
      - devops-spring
    depends_on:
      - prometheus

  zap:
    image: zaproxy/zap-stable:latest
    container_name: zap
    restart: always
    networks:
      - devops-spring
    ports:
      - "8080:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./data/zap:/home/zap/.ZAP
      - ./data/zap-reports:/var/zap/zap-reports
    command: >
      zap.sh -daemon -port 8080 -host 0.0.0.0
      -config api.disablekey=true
      -config api.addrs.addr.name=.*
      -config api.addrs.addr.regex=true
    environment:
      - TESTCONTAINERS_RYUK_DISABLED=true
    deploy:
      resources:
        limits:
          memory: 3G
    depends_on:
      - juice-shop

  juice-shop:
    image: bkimminich/juice-shop
    container_name: juice-shop
    networks:
      - devops-spring
    ports:
      - "8888:3000"


  jenkins:
    privileged: true
    build:
      context: ./../jenkinsfiles
      dockerfile: jenkins.dockerfile
    container_name: jenkins
    restart: always
    ports:
      - "8081:8080"
      - "50001:50000"
    volumes:
      # - jenkins_data:/var/jenkins_home 
      # - ./data/jenkins:/var/jenkins_home
      # - ./data/jenkins:/var/jenkins_home 
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      # - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
      - JENKINS_OPTS="--prefix=/jenkins"
    networks:
      - devops-spring
    depends_on:
      - zap
    

  

networks:
  devops-spring:
    driver: bridge


volumes:
  jenkins_data: {}
