credentials:
  system:
    domainCredentials:
      - credentials:
          - usernamePassword:
              scope: GLOBAL
              id: "github-pat-jenkins"
              username: "Sujay99999" 
              password: "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"
              description: "GitHub PAT for Jenkins Webhook Automation"
          - string:
              scope: GLOBAL
              id: "sonarqube-token-jenkins" 
              secret: "sqa_067384f36b74deb81d24b7d708ba33aa7c1ca9cc" 
              # secret: "${file:/shared/sonarqube-token.txt}" 
              description: "SonarQube analysis token"
          - basicSSHUserPrivateKey:
              scope: GLOBAL
              id: "ec2-ssh-key"
              username: "ec2-user"
              description: "SSH key for EC2 instance deployment"
              privateKeySource:
                directEntry:
                  privateKey: "${SSH_PRIVATE_KEY}"


jenkins:
  systemMessage: "Jenkins configured automatically by Jenkins Configuration as Code plugin"
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "admin"
          password: "password"
  authorizationStrategy:
    loggedInUsersCanDoAnything:
        allowAnonymousRead: false

unclassified:
  location:
    url: "https://216a-128-237-82-107.ngrok-free.app/jenkins/github-webhook/"
  githubpluginconfig:
    configs:
      - name: "GitHub" 
        apiUrl: "https://api.github.com"
        credentialsId: "github-pat-jenkins" # Use the ID defined above
        manageHooks: true
  prometheusConfiguration:
    collectingMetricsPeriodInSeconds: 15
    defaultNamespace: "jenkins"
    path: "prometheus"
    useAuthenticatedEndpoint: false
  sonarGlobalConfiguration:
    buildWrapperEnabled: true
    installations:
      - name: "LocalSonarEnv"
        serverUrl: "http://sonarqube:9000"
        credentialsId: "sonarqube-token-jenkins"

  # gitHubConfiguration:
  #   endpoints:
  #     - name: "GitHub" 
  #       apiUri: "https://api.github.com"
  #       credentialsId: "github-pat-jenkins" # Use the ID defined above
  #       manageHooks: true 


# Tool Configuration
tool:
  ansible:
    installations:
      - name: "ansible"
        home: "/usr/bin"
        properties:
          - installSource:
              installers:
                - command:
                    label: "Default system Ansible"
                    toolHome: "/usr/bin"
  sonarRunnerInstallation:
    installations:
    - name: "SonarScanner"
      properties:
      - installSource:
          installers:
          - sonarRunnerInstaller:
              id: "4.8.0.2856"
  maven:
    installations:
      - name: maven3
        properties:
          - installSource:
              installers:
                - maven:
                    id: "3.8.4"

jobs:
  - script: |
      multibranchPipelineJob('spring-petclinic-multibranch') {
        branchSources {
          branchSource {
            source {
              git {
                id('spring-petclinic-github')
                remote('https://github.com/Sujay99999/spring-petclinic.git')
                credentialsId('github-pat-jenkins')
                
                traits {
                  gitBranchDiscovery()
                  
                }
              }
            }
          }
        }
        configure { node ->
          node / 'triggers' << 'com.cloudbees.hudson.plugins.folder.computed.PeriodicFolderTrigger' {
            spec('*/30 * * * * *') // cron expression for every 30 seconds
            interval('30000')      // milliseconds (30 seconds)
          }
        }
        orphanedItemStrategy {
          discardOldItems {
            numToKeep(10)
          }
        }
      }
